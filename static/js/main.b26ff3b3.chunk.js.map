{"version":3,"sources":["Redux/reducers/actionTypes.js","Redux/reducers/index.js","Components/UserInput.js","Components/GifDisplay.js","App.js","reportWebVitals.js","Redux/Store.js","index.js"],"names":["GOT_SEARCH_RESULTS","GOT_TRENDING_GIFS","initialState","searchResults","trendingGifs","userHasSearched","rootReducer","state","action","type","payload","UserInput","props","handleSubmit","event","console","log","rating","preventDefault","getSearchResults","userSearchQuery","language","handleChange","setState","target","name","value","onSubmit","this","class","onChange","React","Component","connect","dispatch","searchTerm","a","url","axios","get","response","data","gif","push","images","downsized","error","GifDisplay","getTrendingGifs","map","src","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","withExtraArgument","loggingMiddleware","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.b26ff3b3.chunk.js","sourcesContent":["export const GOT_SEARCH_RESULTS = 'GOT_SEARCH_RESEULTS'\nexport const GOT_TRENDING_GIFS = 'GOT_TRENDING_GIFS'","import axios from 'axios'\n\n//Action Types\nimport { GOT_SEARCH_RESULTS , GOT_TRENDING_GIFS} from './actionTypes';\n\nconst API_KEY = 'pvq2g64V6BqpkDUvs4eLGr9NO1wCc8Dw';\n\nconst initialState = {\n  searchResults: [],\n  trendingGifs: [],\n  userHasSearched: false\n}\n\nexport const getTrendingGifs = (trendingGifs) => {\n  return {\n    type: GOT_TRENDING_GIFS,\n    payload: trendingGifs\n  }\n}\n\n//Action creaters \nconst gotSearchResults = (payload) => ({\n  type: GOT_SEARCH_RESULTS,\n  payload: payload\n})\n\nexport const getSearchResults = (searchTerm, rating, language) => {\n  return async (dispatch) => {\n    try {\n      let url = 'https://api.giphy.com/v1/gifs/search?api_key=' + API_KEY + '&limit=25' + '&q=' + searchTerm + '&rating=' + rating + '&lang=' + language\n      console.log(url)\n      const response = await axios.get(url);\n      let searchResults = [] \n      for (let gif of response.data.data){\n        searchResults.push(gif.images.downsized.url)\n      }\n      console.log(response)\n      dispatch(gotSearchResults(searchResults))\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\n\n// export const getSearchResults = (searchTerm) => {\n//   try {\n//     let response = await axios.get(\n//       'https://api.giphy.com/v1/gifs/search?api_key=' + API_KEY + '&limit=25'\n//     );\n//     var searchResults = [] \n//     for (let gif of response.data.data){\n//       searchResults.push(gif.images.downsized.url)\n//     }\n//   } catch (error) {\n//     console.error(error);\n//     }\n//   return {\n//     type: GOT_SEARCH_RESULTS ,\n//     payload: searchResults\n//   }\n// }\n\n\n\n//Root reducer\nconst rootReducer = (state = initialState, action) => {  \n  switch (action.type) {\n    case GOT_TRENDING_GIFS:\n      return {...state, trendingGifs: action.payload}\n    case GOT_SEARCH_RESULTS :\n      return {...state, searchResults: action.payload, userHasSearched: true} \n    default:\n      return state\n  }\n}\n\nexport default rootReducer;\n\n\n\n\n\n\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getSearchResults } from '../Redux/reducers'\n\nclass UserInput extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      userSearchQuery: \"\",\n      rating: \"g\",\n      language:\"en\"\n    }\n  }\n  \n    \n  handleSubmit = (event) => {\n    console.log(this.state.rating)\n    event.preventDefault()\n    this.props.getSearchResults(this.state.userSearchQuery, this.state.rating, this.state.language)\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n    \n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} class=\"user-input\">\n        <label >\n            <br />\n            Search: <input name=\"userSearchQuery\" type=\"text\" value={this.state.userSearchQuery} onChange={this.handleChange} />\n        </label>  <br />\n        Rating: <select name='rating' value={this.state.rating} onChange={this.handleChange}>\n          <option value=\"g\">g</option>\n          <option value=\"pg\">pg</option>\n          <option value='pg-13'>pg-13</option>\n          <option value=\"r\">r</option>\n        </select> <br />\n        Language: <select name='language' value={this.state.language} onChange={this.handleChange}>\n          <option value=\"en\">English</option>\n          <option value=\"ar\">Arabic</option>\n          <option value=\"ru\">Russian</option>\n          <option value=\"hi\">Hindi</option>\n          <option value=\"th\">Thai</option>\n          <option value=\"pt\">Portuguese</option>\n        </select> <br /> <br />\n        <input class=\"button\" type=\"submit\" value=\"Submit\" />\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userSearchQuery: state.userSearchQuery\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getSearchResults: (searchTerm, rating, language) => dispatch(getSearchResults(searchTerm, rating, language)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserInput)\n\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { getTrendingGifs } from '../Redux/reducers'\nimport { connect } from 'react-redux'\n\nconst API_KEY = 'pvq2g64V6BqpkDUvs4eLGr9NO1wCc8Dw';\n\nclass GifDisplay extends Component {\n\n  async componentDidMount() {\n    try {\n      let response = await axios.get(\n        'https://api.giphy.com/v1/gifs/trending?api_key=' + API_KEY + '&limit=25&rating=g'\n      );\n      let trendingGifs = [] \n      for (let gif of response.data.data){\n        trendingGifs.push(gif.images.downsized.url)\n      }\n      this.props.getTrendingGifs(trendingGifs)\n    } catch (error) {\n      console.error(error);\n      }\n  }\n\n  \n  render() {\n    if (this.props.userHasSearched === false ) {\n      return (\n        <div >\n          {this.props.trendingGifs.map(gif => { return (<div> <img src={gif} /> <br/> </div>)})}\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          {this.props.searchResults.map(gif => { return (<div> <img src={gif} /> <br/> </div>)})}\n        </div>\n      )\n    }\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    trendingGifs: state.trendingGifs,\n    userHasSearched: state.userHasSearched,\n    searchResults: state.searchResults\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTrendingGifs: (trendingGifs) => dispatch(getTrendingGifs(trendingGifs)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GifDisplay)\n","import './App.css';\nimport React from 'react';\n\n// components \nimport UserInput from './Components/UserInput'\nimport GifDisplay from './Components/GifDisplay'\n\n export default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <UserInput /> <br />\n        <GifDisplay />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport axios from 'axios';\nimport reducer from './reducers';\nimport loggingMiddleware from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\n\nexport default createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(\n      thunkMiddleware.withExtraArgument({ axios }),\n      loggingMiddleware\n    )\n  )\n  );","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// redux\nimport { Provider } from 'react-redux'\nimport store from './Redux/Store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}